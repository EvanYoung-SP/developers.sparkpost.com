FORMAT: 1A
title: Snippets
description: Manage reusable content snippets that can be referenced within inline content and stored templates.

# Group Snippets

Snippets are short reusable pieces of email content.
Snippets can be imported into any template content or transmission content using substitution syntax.

For example, if you have a snippet with the ID `ourfooter` and the following HTML content:

```html
<footer>
    <p>Our HTML footer</p>
</footer>
```

The snippet can be imported into an HTML email's content using the `render_snippet` macro call.

```html
<html>
    <p>Our body content</p>
    {{ render_snippet( "ourfooter" ) }}
</html>
```

The resulting rendered HTML content would look like:

```html
<html>
    <p>Our body content</p>
    <footer><p>Our HTML footer</p></footer>
</html>
```

See the [Substitution Reference](/api/substitutions-reference/#header-snippets)
for a more detailed explanation of the `render_snippet` macro and more complicated examples.

## Snippet Object

+ Data Structure: Attributes
    + id (string) - Unique ID used to reference the snippet.
    + content (object) - HTML, AMPHTML, and/or text content.
        + html (string) - HTML content which will be used when the snippet is referenced from the HTML part of a template or inline content.
        + text (string) - Plain text content which will be used when the snippet is referenced from the plain text part of a template or inline content.
        + amp_html (string) - AMPHTML content which will be used when the snippet is referenced from the AMPHTML part of a template or inline content.
    + shared_with_subaccounts (boolean) - Whether this snippet can be used by subaccounts.

## Create a Snippet [POST /snippets]

+ Data Structure
    + id (required, string) - Unique ID used to reference the snippet.
    + content (required, object) - HTML, AMPHTML, and/or text content. Substitution syntax is supported with the exception of the `render_dynamic_content()` and `render_snippet()` macro calls. In other words, snippets may not reference other snippets.
        + html (string) - HTML content which will be used when the snippet is referenced from the HTML part of a template or inline content. Maximum length - 100KB.
        + text (string) - Plain text content which will be used when the snippet is referenced from the plain text part of a template or inline content. Maximum length - 100KB.
        + amp_html (string) - AMPHTML content which will be used when the snippet is referenced from the AMPHTML part of a template or inline content. Maximum length - 100KB.
    + shared_with_subaccounts (required, boolean) - Whether this snippet can be used by subaccounts.
        + Default: false


+ Request (application/json)

    + Body

        ```
        {
            "id" : "header",
            "content": {
                "html": "<b>Our cool header snippet for {{name}}</b>"
            }
        }
        ```

+ Response 200 (application/json)

        {
          "results": {
            "id": "header"
          }
        }

+ Response 422 (application/json)

        {
          "errors" : [
            {
              "part" : "text",
              "description" : "Error while compiling part text: line 4: syntax error near 'age'",
              "line" : 4,
              "code" : "3000",
              "message" : "substitution language syntax error in snippet content"
            }
          ]
        }

## Retrieve a Snippet [GET /snippets/{id}]

+ Parameters
    + id (required, string, `ourfooter`)

+ Request


+ Response 200 (application/json)

        {
          "results" : {
            "id" : "ourfooter",
            "content": {
              "html" : "<b>Our standard footer</b>",
              "text" : "Our standard footer",
              "amp_html" : "<b>Our standard footer</b>"
            }
          }
        }

## Update a Snippet [PUT /snippets/{id}]

Unlike the [Templates API](api/templates/), if a content object is
provided in the update request, it only needs to include the fields that
are being updated. Fields that are not included will keep their current
values.

To remove a content field that was specified previously, simply set that
field to an empty string in the update request.

+ Data Structure
    + content (object) - HTML, AMPHTML, and/or text content. Substitution syntax is supported with the exception of the render_dynamic_content() and render_snippet() macro calls. In other words, snippets may not reference other snippets.
        + html (string) - HTML content which will be used when the snippet is referenced from the HTML part of a template or inline content. Maximum length - 100KB.
        + text (string) - Plain text content which will be used when the snippet is referenced from the plain text part of a template or inline content. Maximum length - 100KB.
        + amp_html (string) - AMPHTML content which will be used when the snippet is referenced from the AMPHTML part of a template or inline content. Maximum length - 100KB.
    + shared_with_subaccounts (boolean) - Whether this snippet can be used by subaccounts.


+ Parameters
    + id (required, string, `ourfooter`)

+ Request Update (application/json)

    + Body

        ```
       {
         "content": {
           "html" : "<b>Our updated footer</b>",
           "text" : "Our updated footer",
           "amp_html" : "<b>Our updated footer</b>"
          }
        }
        ```

+ Response 200

## Delete a Snippet [DELETE /snippets/{id}]


+ Parameters
    + id (required, string, `ourfooter`)

+ Request

+ Response 204 (application/json)

+ Response 404 (application/json)

    + Body

        ```
        {
        "errors": [
          {
            "message": "resource not found",
            "code": "1600",
            "description": "Snippet does not exist"
          }
        ]
        }
        ```

### List all Snippets [GET /snippets]

Returns an array with all your Snippets.

+ Parameters
    + shared_with_subaccounts (optional, boolean) ... If true, returns only shared snippets. If false, returns only non-shared snippets.  When not provided, returns both shared and non-shared snippets.

+ Request

+ Response 200 (application/json)

        {
          "results" : [
            {
              "id" : "header",
              "shared_with_subaccount" : false
            },
            {
              "id" : "footer",
              "shared_with_subaccount" : true
            }
          ]
        }
